[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
DATABASE_URL="${DATABSE_URL:postgres://admin:admin@localhost/restaurant-db}"
HOST_URL="${HOST_URL:localhost}"
HOST_PORT="${HOST_PORT:8080}"

# Building
[tasks.build]
command = "cargo"
args = ["build"]

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.build-release]
command = "cargo"
args = ["build", "--release"]

# Running the program(s)
[tasks.server]
command = "cargo"
args = ["run", "-p", "server"]
dependencies=["migrate-redo"] # Obviously we don't want to redo in production, but it's simpler for development.

[tasks.server-bin]
dependencies=["build-release"]
command="$(CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY)/target/release/server"

[tasks.client]
command = "cargo"
args = ["run", "-p", "client"]
dependencies=["migrate-redo"]

[tasks.client-bin]
dependencies=["build-release"]
command="$(CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY)/target/release/client"

[tasks.run]
run_task = {name = ["client", "server"], parallel=true}

[tasks.run-release]
run_task = {name = ["client-bin", "server-bin"], parallel=true}

# Formatting, Linting
[tasks.fmt]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]

[tasks.clippy]
install_crate = "clippy"
command = "cargo"
args = [
    "clippy",
    "--all-features",
    "--all-targets",
    "--",
    "-D",
    "warnings",
    "-W",
    "clippy::all"]

[tasks.format]
dependencies=["clippy", "fmt"]

# Documentation
[tasks.doc]
command = "cargo"
args = ["doc"]

[tasks.test]
command = "cargo"
args = ["test"]
dependencies = ["clean", "migrate-redo"]

# Migrate

# This does not work properly.
[tasks.install_diesel]
install_crate = "diesel_cli"
install_crate_args = ["--force", "--no-default-features", "--features", "postgres"]

[tasks.dbsetup]
command = "diesel"
cwd="${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/server"
args = ["setup"]

[tasks.migrate]
command = "diesel"
cwd="${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/server"
args = ["migration", "run"]
dependencies = ["dbsetup"]

[tasks.migrate-redo]
command = "diesel"
cwd="${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/server"
args = ["migration", "redo", "-n", "2"]
dependencies = ["migrate"]
