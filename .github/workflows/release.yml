name: "Release workflow"

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true

jobs:
  release:
    name: ${{ matrix.target }} - Release
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            runs-on: ubuntu-20.04
            archive: tar.gz
            module: "server"
          - target: x86_64-unknown-linux-gnu
            runs-on: ubuntu-20.04
            archive: tar.gz
            module: "client"
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4
      - name: Get tagged version
        id: tag
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          else
            echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Update Cargo.toml version
        run: |
          VER=$(echo "$VERSION" | sed 's/[^0-9.]//g')
          sed -i "s/^version = .*/version = \"$VER\"/" modules/${{ matrix.module }}/Cargo.toml
      - name: Install musl tools
        run: |
          sudo apt-get install -y musl-tools
      - name: Build and release
        uses: houseabsolute/actions-rust-cross@v0
        with:
          target: ${{ matrix.target }}
          args: "--release --verbose"
          toolchain: "nightly"
          working-directory: "modules/${{ matrix.module }}"

      - name: Prepare release folder
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls target/
          echo "====="
          ls modules/
          echo "====="
          ls target/${{ matrix.module }}
          echo "====="
          ls modules/${{ matrix.module }}
          echo "======"
          ls modules/${{ matrix.module }}/target
          echo "======"
          ls modules/${{ matrix.module }}/target/${{ matrix.target }}
          echo "======"
          ls modules/${{ matrix.module }}/target/${{ matrix.target }}/release/
          sudo chmod -R 755 modules/${{ matrix.module }}/target/${{ matrix.target }}/release/${{ matrix.module }}
          
      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: ${{ matrix.module }}
          target: ${{ matrix.target }}
          working-directory: "modules/${{ matrix.module }}"
          archive-name: "simple-restaurant-${{ matrix.module }}-${{ env.VERSION }}-${{ matrix.target }}"
          extra-files: "" 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx.cache-api-${{ matrix.module }}
          key: ${{ runner.os }}-api-${{ matrix.module }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-api-
            ${{ runner.os }}-buildx-
      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/wenrir/simple-restaurant-${{ matrix.module }}
          labels: |
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.description="Simple API for technical assessment."
            org.opencontainers.image.documentation="${{ github.event.repository.clone_url }}/README.org"
            org.opencontainers.image.title="Restaurant-${{ matrix.module }}"
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      - name: ${{ matrix.module }} Image
        uses: docker/build-push-action@v6
        with:
          context: ./modules
          target: release
          build-args: |
            MODULE=${{ matrix.module }}
          load: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx.cache-api-${{ matrix.module }}
          cache-to: type=local,dest=/tmp/.buildx.cache-api-${{ matrix.module }}-new,mode=max

      # Avoid cache to infinitely grow, quite ugly but ...
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx.cache-api-${{ matrix.module }}
          mv /tmp/.buildx.cache-api-${{ matrix.module }}-new /tmp/.buildx.cache-api-${{ matrix.module }}
